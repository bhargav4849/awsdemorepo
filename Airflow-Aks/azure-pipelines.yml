# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'airflowsvccnn'
  imageRepository: 'airflow'
  containerRegistry: 'di01airflowacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/airflow/Dockerfile'
  tag: '580'  #'$(Build.BuildId)'
  imagename: 'di01airflowacr.azurecr.io/airflow'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    # - task: Docker@2
    #   displayName: Build and push an image to container registry
    #   inputs:
    #     command: buildAndPush
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     tags: |
    #       $(tag)

    - task: HelmInstaller@0
      inputs:
        helmVersion: '2.14.1'
        installKubectl: true
    - task: HelmDeploy@0
      inputs:
        command: 'package'
        chartPath: '$(Build.sourcesdirectory)/airflow'
        destination: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
        artifact: 'drop'

# - stage: Deploy
#   displayName: Deploy image
#   jobs:  
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     # - task: KubernetesManifest@0
#     #   displayName: createSecret
#     #   inputs:
#     #     action: 'createSecret'
#     #     kubernetesServiceConnection: 'airflowacrcnn'
#     #     namespace: 'airflow'
#     #     secretType: 'dockerRegistry'
#     #     secretName: 'aks-secret-crny'
#     #     dockerRegistryEndpoint: 'airflowsvccnn'

#     - task: DownloadBuildArtifacts@1
#       inputs:
#           buildType: 'current'
#           downloadType: 'single'
#           artifactName: 'drop'
#           itemPattern: '**'
#           downloadPath: '$(System.ArtifactsDirectory)'

#     # - task: DownloadPipelineArtifact@2
#     #   inputs:
#     #     artifactName: 'configuration'
#     #     downloadpath: '$(System.ArtifactsDirectory)/configuration'
#     # - task: replacetokens@5
#     #   inputs:
#     #     rootDirectory: '$(System.ArtifactsDirectory)'
#     #     targetFiles: 'configuration/deployment.yaml'
#     #     encoding: 'auto'
#     #     tokenPattern: 'rm'
#     #     writeBOM: true
#     #     actionOnMissing: 'warn'
#     #     keepToken: false
#     #     actionOnNoFiles: 'continue'
#     #     enableTransforms: false
#     #     enableRecursion: false
#     #     useLegacyPattern: false
#     #     enableTelemetry: true

#     # - task: KubernetesManifest@0
#     #   inputs:
#     #     action: 'deploy'
#     #     kubernetesServiceConnection: 'airflowacrcnn'
#     #     namespace: 'airflow'
#     #     manifests: '$(System.ArtifactsDirectory)/**/values.yaml'
#     #     containers: 'di01airflowacr.azurecr.io/airflow:$(tag)'

#     # - task: HelmDeploy@0
#     #   inputs:
#     #     connectionType: 'Azure Resource Manager'
#     #     azureSubscription: 'Svc-devops'
#     #     azureResourceGroup: 'aks-airflow-bh01'
#     #     kubernetesCluster: 'aksbh01airflow'
#     #     namespace: 'airflow'
#     #     command: 'upgrade'
#     #     chartType: 'FilePath'
#     #     chartPath: '$(System.ArtifactsDirectory)/drop/airflow/values.yaml'
#     #     azureContainerRegistry: 'di01airflowacr.azurecr.io'
#     #     azureResourceGroupForACR: 'rg-aks-airflow'

#     - task: HelmInstaller@0
#       inputs:
#         helmVersion: '2.14.1'
#         installKubectl: true

#     - task: CmdLine@2
#       inputs:
#         script: 'helm repo add apache-airflow https://airflow.apache.org'

#     # - task: CmdLine@2
#     #   inputs:
#     #     script: 'helm upgrade --install airflow apache-airflow/airflow --namespace airflow -f values.yaml --debug --version 1.7.0'

#     - task: HelmDeploy@0
#       inputs:
#         connectionType: 'Azure Resource Manager'
#         azureSubscription: 'Svc-devops'
#         azureResourceGroup: 'aks-airflow-bh01'
#         kubernetesCluster: 'aksbh01airflow'
#         namespace: 'airflow'
#         command: 'upgrade'
#         chartType: 'Name'
#         chartName: '$(System.ArtifactsDirectory)/**/**/drop-0.1.0.tgz'
#         chartVersion: '580'
#         releaseName: 'airflow'